public List<AbstractColor> range(AbstractColor destinationColor, int steps, bool includeSelf)
{
    RGB a = this.toRGB();
    RGB b = destinationColor.toRGB();
    List<AbstractColor> colors = new List<AbstractColor>();
    steps--;
    double nr, ng, nb;
    for (int n = 1; n < steps; n++)
    {
        nr = Math.Floor((double)a.r + (n * (b.r - a.r) / steps));
        ng = Math.Floor((double)a.g + (n * (b.g - a.g) / steps));
        nb = Math.Floor((double)a.b + (n * (b.b - a.b) / steps));
        colors.Add(new RGB(Convert.ToInt32(nr), Convert.ToInt32(ng), Convert.ToInt32(nb))[this.toSelf]);
    }
    if (includeSelf)
    {
        colors.Insert(0, this);
        colors.Add(destinationColor[this.toSelf]);
    }
    return colors;
}